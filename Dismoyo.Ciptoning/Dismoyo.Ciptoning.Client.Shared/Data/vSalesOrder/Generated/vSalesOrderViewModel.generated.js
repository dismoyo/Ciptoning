// ===================================================================================
// Author        : System
// Created date  : 15 May 2016 20:09:45
// Description   : vSalesOrderViewModel javascript.
//
// NOTE: This file is generated by system. Please do not modify this file.
//       Consider regenerate this file.
// ===================================================================================

(function () {
    Dismoyo_Ciptoning_Client.vSalesOrderViewModel = function (data) {
        this.DocumentID = ko.observable();
        this.DocumentCode = ko.observable();
        this.TransactionDate = ko.observable();
        this.PODocumentID = ko.observable();
        this.PODocumentCode = ko.observable();
        this.POTransactionDate = ko.observable();
        this.SalesmanID = ko.observable();
        this.SalesmanCode = ko.observable();
        this.SalesmanName = ko.observable();
        this.Salesman = ko.observable();
        this.WarehouseID = ko.observable();
        this.WarehouseCode = ko.observable();
        this.WarehouseName = ko.observable();
        this.Warehouse = ko.observable();
        this.SiteID = ko.observable();
        this.SiteCode = ko.observable();
        this.SiteName = ko.observable();
        this.Site = ko.observable();
        this.CompanyID = ko.observable();
        this.CompanyCode = ko.observable();
        this.CompanyName = ko.observable();
        this.Company = ko.observable();
        this.AreaID = ko.observable();
        this.AreaCode = ko.observable();
        this.AreaName = ko.observable();
        this.Area = ko.observable();
        this.RegionID = ko.observable();
        this.RegionCode = ko.observable();
        this.RegionName = ko.observable();
        this.Region = ko.observable();
        this.TerritoryID = ko.observable();
        this.TerritoryCode = ko.observable();
        this.TerritoryName = ko.observable();
        this.Territory = ko.observable();
        this.SiteDistributionTypeID = ko.observable();
        this.SiteDistributionTypeName = ko.observable();
        this.WarehouseTypeID = ko.observable();
        this.WarehouseTypeName = ko.observable();
        this.IsSiteLotNumberEntryRequired = ko.observable();
        this.CustomerID = ko.observable();
        this.CustomerCode = ko.observable();
        this.CustomerName = ko.observable();
        this.Customer = ko.observable();
        this.PriceGroupID = ko.observable();
        this.PriceGroupName = ko.observable();
        this.DiscountGroupID = ko.observable();
        this.DiscountGroupCode = ko.observable();
        this.DiscountGroupName = ko.observable();
        this.DiscountGroup = ko.observable();
        this.DiscountGroupDescription = ko.observable();
        this.TermOfPaymentID = ko.observable();
        this.TermOfPaymentName = ko.observable();
        this.ReferenceNumber = ko.observable();
        this.DODocumentID = ko.observable();
        this.DODocumentCode = ko.observable();
        this.DOShipmentDate = ko.observable();
        this.DOReceivedDate = ko.observable();
        this.DOPrintedCount = ko.observable();
        this.DOLastPrintedDate = ko.observable();
        this.InvoiceDocumentID = ko.observable();
        this.InvoiceDocumentCode = ko.observable();
        this.RawTotalGrossPrice = ko.observable();
        this.RawTotalPrice = ko.observable();
        this.RawTotalDiscountStrata1Amount = ko.observable();
        this.RawTotalDiscountStrata2Amount = ko.observable();
        this.RawTotalDiscountStrata3Amount = ko.observable();
        this.RawTotalDiscountStrata4Amount = ko.observable();
        this.RawTotalDiscountStrata5Amount = ko.observable();
        this.RawTotalAddDiscountStrataAmount = ko.observable();
        this.RawTotalGross = ko.observable();
        this.RawTotalTax = ko.observable();
        this.RawTotal = ko.observable();
        this.TotalGrossPrice = ko.observable();
        this.TotalPrice = ko.observable();
        this.TotalDiscountStrata1Amount = ko.observable();
        this.TotalDiscountStrata2Amount = ko.observable();
        this.TotalDiscountStrata3Amount = ko.observable();
        this.TotalDiscountStrata4Amount = ko.observable();
        this.TotalDiscountStrata5Amount = ko.observable();
        this.TotalAddDiscountStrataAmount = ko.observable();
        this.TotalGross = ko.observable();
        this.TotalTax = ko.observable();
        this.Total = ko.observable();
        this.TotalWeight = ko.observable();
        this.TotalDimension = ko.observable();
        this.AddDiscountStrataReason = ko.observable();
        this.DocumentStatusID = ko.observable();
        this.DocumentStatusName = ko.observable();
        this.DocumentStatusReason = ko.observable();
        this.SFAInvoiceDocumentCode = ko.observable();
        this.PrintCount = ko.observable();
        this.PostedDate = ko.observable();
        this.CreatedDate = ko.observable();
        this.CreatedByUserID = ko.observable();
        this.CreatedByUserName = ko.observable();
        this.ModifiedDate = ko.observable();
        this.ModifiedByUserID = ko.observable();
        this.ModifiedByUserName = ko.observable();

        this.ChildSummaries = ko.observableArray([]);

        if (data)
            this.fromJS(data);
    };

    $.extend(Dismoyo_Ciptoning_Client.vSalesOrderViewModel.prototype, {
        toJS: function () {
            return {
                DocumentID: this.DocumentID(),
                DocumentCode: this.DocumentCode(),
                TransactionDate: this.TransactionDate(),
                PODocumentID: this.PODocumentID(),
                PODocumentCode: this.PODocumentCode(),
                POTransactionDate: this.POTransactionDate(),
                SalesmanID: this.SalesmanID(),
                SalesmanCode: this.SalesmanCode(),
                SalesmanName: this.SalesmanName(),
                Salesman: this.Salesman(),
                WarehouseID: this.WarehouseID(),
                WarehouseCode: this.WarehouseCode(),
                WarehouseName: this.WarehouseName(),
                Warehouse: this.Warehouse(),
                SiteID: this.SiteID(),
                SiteCode: this.SiteCode(),
                SiteName: this.SiteName(),
                Site: this.Site(),
                CompanyID: this.CompanyID(),
                CompanyCode: this.CompanyCode(),
                CompanyName: this.CompanyName(),
                Company: this.Company(),
                AreaID: this.AreaID(),
                AreaCode: this.AreaCode(),
                AreaName: this.AreaName(),
                Area: this.Area(),
                RegionID: this.RegionID(),
                RegionCode: this.RegionCode(),
                RegionName: this.RegionName(),
                Region: this.Region(),
                TerritoryID: this.TerritoryID(),
                TerritoryCode: this.TerritoryCode(),
                TerritoryName: this.TerritoryName(),
                Territory: this.Territory(),
                SiteDistributionTypeID: this.SiteDistributionTypeID(),
                SiteDistributionTypeName: this.SiteDistributionTypeName(),
                WarehouseTypeID: this.WarehouseTypeID(),
                WarehouseTypeName: this.WarehouseTypeName(),
                IsSiteLotNumberEntryRequired: this.IsSiteLotNumberEntryRequired(),
                CustomerID: this.CustomerID(),
                CustomerCode: this.CustomerCode(),
                CustomerName: this.CustomerName(),
                Customer: this.Customer(),
                PriceGroupID: this.PriceGroupID(),
                PriceGroupName: this.PriceGroupName(),
                DiscountGroupID: this.DiscountGroupID(),
                DiscountGroupCode: this.DiscountGroupCode(),
                DiscountGroupName: this.DiscountGroupName(),
                DiscountGroup: this.DiscountGroup(),
                DiscountGroupDescription: this.DiscountGroupDescription(),
                TermOfPaymentID: this.TermOfPaymentID(),
                TermOfPaymentName: this.TermOfPaymentName(),
                ReferenceNumber: this.ReferenceNumber(),
                DODocumentID: this.DODocumentID(),
                DODocumentCode: this.DODocumentCode(),
                DOShipmentDate: this.DOShipmentDate(),
                DOReceivedDate: this.DOReceivedDate(),
                DOPrintedCount: this.DOPrintedCount(),
                DOLastPrintedDate: this.DOLastPrintedDate(),
                InvoiceDocumentID: this.InvoiceDocumentID(),
                InvoiceDocumentCode: this.InvoiceDocumentCode(),
                RawTotalGrossPrice: this.RawTotalGrossPrice(),
                RawTotalPrice: this.RawTotalPrice(),
                RawTotalDiscountStrata1Amount: this.RawTotalDiscountStrata1Amount(),
                RawTotalDiscountStrata2Amount: this.RawTotalDiscountStrata2Amount(),
                RawTotalDiscountStrata3Amount: this.RawTotalDiscountStrata3Amount(),
                RawTotalDiscountStrata4Amount: this.RawTotalDiscountStrata4Amount(),
                RawTotalDiscountStrata5Amount: this.RawTotalDiscountStrata5Amount(),
                RawTotalAddDiscountStrataAmount: this.RawTotalAddDiscountStrataAmount(),
                RawTotalGross: this.RawTotalGross(),
                RawTotalTax: this.RawTotalTax(),
                RawTotal: this.RawTotal(),
                TotalGrossPrice: this.TotalGrossPrice(),
                TotalPrice: this.TotalPrice(),
                TotalDiscountStrata1Amount: this.TotalDiscountStrata1Amount(),
                TotalDiscountStrata2Amount: this.TotalDiscountStrata2Amount(),
                TotalDiscountStrata3Amount: this.TotalDiscountStrata3Amount(),
                TotalDiscountStrata4Amount: this.TotalDiscountStrata4Amount(),
                TotalDiscountStrata5Amount: this.TotalDiscountStrata5Amount(),
                TotalAddDiscountStrataAmount: this.TotalAddDiscountStrataAmount(),
                TotalGross: this.TotalGross(),
                TotalTax: this.TotalTax(),
                Total: this.Total(),
                TotalWeight: this.TotalWeight(),
                TotalDimension: this.TotalDimension(),
                AddDiscountStrataReason: this.AddDiscountStrataReason(),
                DocumentStatusID: this.DocumentStatusID(),
                DocumentStatusName: this.DocumentStatusName(),
                DocumentStatusReason: this.DocumentStatusReason(),
                SFAInvoiceDocumentCode: this.SFAInvoiceDocumentCode(),
                PrintCount: this.PrintCount(),
                PostedDate: this.PostedDate(),
                CreatedDate: this.CreatedDate(),
                CreatedByUserID: this.CreatedByUserID(),
                CreatedByUserName: this.CreatedByUserName(),
                ModifiedDate: this.ModifiedDate(),
                ModifiedByUserID: this.ModifiedByUserID(),
                ModifiedByUserName: this.ModifiedByUserName(),

                ChildSummaries: ko.toJS(this.ChildSummaries())
            };
        },

        fromJS: function (data) {
            if (data) {
                this.DocumentID(data.DocumentID);
                this.DocumentCode(data.DocumentCode);
                this.TransactionDate(data.TransactionDate);
                this.PODocumentID(data.PODocumentID);
                this.PODocumentCode(data.PODocumentCode);
                this.POTransactionDate(data.POTransactionDate);
                this.SalesmanID(data.SalesmanID);
                this.SalesmanCode(data.SalesmanCode);
                this.SalesmanName(data.SalesmanName);
                this.Salesman(data.Salesman);
                this.WarehouseID(data.WarehouseID);
                this.WarehouseCode(data.WarehouseCode);
                this.WarehouseName(data.WarehouseName);
                this.Warehouse(data.Warehouse);
                this.SiteID(data.SiteID);
                this.SiteCode(data.SiteCode);
                this.SiteName(data.SiteName);
                this.Site(data.Site);
                this.CompanyID(data.CompanyID);
                this.CompanyCode(data.CompanyCode);
                this.CompanyName(data.CompanyName);
                this.Company(data.Company);
                this.AreaID(data.AreaID);
                this.AreaCode(data.AreaCode);
                this.AreaName(data.AreaName);
                this.Area(data.Area);
                this.RegionID(data.RegionID);
                this.RegionCode(data.RegionCode);
                this.RegionName(data.RegionName);
                this.Region(data.Region);
                this.TerritoryID(data.TerritoryID);
                this.TerritoryCode(data.TerritoryCode);
                this.TerritoryName(data.TerritoryName);
                this.Territory(data.Territory);
                this.SiteDistributionTypeID(data.SiteDistributionTypeID);
                this.SiteDistributionTypeName(data.SiteDistributionTypeName);
                this.WarehouseTypeID(data.WarehouseTypeID);
                this.WarehouseTypeName(data.WarehouseTypeName);
                this.IsSiteLotNumberEntryRequired(data.IsSiteLotNumberEntryRequired);
                this.CustomerID(data.CustomerID);
                this.CustomerCode(data.CustomerCode);
                this.CustomerName(data.CustomerName);
                this.Customer(data.Customer);
                this.PriceGroupID(data.PriceGroupID);
                this.PriceGroupName(data.PriceGroupName);
                this.DiscountGroupID(data.DiscountGroupID);
                this.DiscountGroupCode(data.DiscountGroupCode);
                this.DiscountGroupName(data.DiscountGroupName);
                this.DiscountGroup(data.DiscountGroup);
                this.DiscountGroupDescription(data.DiscountGroupDescription);
                this.TermOfPaymentID(data.TermOfPaymentID);
                this.TermOfPaymentName(data.TermOfPaymentName);
                this.ReferenceNumber(data.ReferenceNumber);
                this.DODocumentID(data.DODocumentID);
                this.DODocumentCode(data.DODocumentCode);
                this.DOShipmentDate(data.DOShipmentDate);
                this.DOReceivedDate(data.DOReceivedDate);
                this.DOPrintedCount(data.DOPrintedCount);
                this.DOLastPrintedDate(data.DOLastPrintedDate);
                this.InvoiceDocumentID(data.InvoiceDocumentID);
                this.InvoiceDocumentCode(data.InvoiceDocumentCode);
                this.RawTotalGrossPrice(data.RawTotalGrossPrice);
                this.RawTotalPrice(data.RawTotalPrice);
                this.RawTotalDiscountStrata1Amount(data.RawTotalDiscountStrata1Amount);
                this.RawTotalDiscountStrata2Amount(data.RawTotalDiscountStrata2Amount);
                this.RawTotalDiscountStrata3Amount(data.RawTotalDiscountStrata3Amount);
                this.RawTotalDiscountStrata4Amount(data.RawTotalDiscountStrata4Amount);
                this.RawTotalDiscountStrata5Amount(data.RawTotalDiscountStrata5Amount);
                this.RawTotalAddDiscountStrataAmount(data.RawTotalAddDiscountStrataAmount);
                this.RawTotalGross(data.RawTotalGross);
                this.RawTotalTax(data.RawTotalTax);
                this.RawTotal(data.RawTotal);
                this.TotalGrossPrice(data.TotalGrossPrice);
                this.TotalPrice(data.TotalPrice);
                this.TotalDiscountStrata1Amount(data.TotalDiscountStrata1Amount);
                this.TotalDiscountStrata2Amount(data.TotalDiscountStrata2Amount);
                this.TotalDiscountStrata3Amount(data.TotalDiscountStrata3Amount);
                this.TotalDiscountStrata4Amount(data.TotalDiscountStrata4Amount);
                this.TotalDiscountStrata5Amount(data.TotalDiscountStrata5Amount);
                this.TotalAddDiscountStrataAmount(data.TotalAddDiscountStrataAmount);
                this.TotalGross(data.TotalGross);
                this.TotalTax(data.TotalTax);
                this.Total(data.Total);
                this.TotalWeight(data.TotalWeight);
                this.TotalDimension(data.TotalDimension);
                this.AddDiscountStrataReason(data.AddDiscountStrataReason);
                this.DocumentStatusID(data.DocumentStatusID);
                this.DocumentStatusName(data.DocumentStatusName);
                this.DocumentStatusReason(data.DocumentStatusReason);
                this.SFAInvoiceDocumentCode(data.SFAInvoiceDocumentCode);
                this.PrintCount(data.PrintCount);
                this.PostedDate(data.PostedDate);
                this.CreatedDate(data.CreatedDate);
                this.CreatedByUserID(data.CreatedByUserID);
                this.CreatedByUserName(data.CreatedByUserName);
                this.ModifiedDate(data.ModifiedDate);
                this.ModifiedByUserID(data.ModifiedByUserID);
                this.ModifiedByUserName(data.ModifiedByUserName);

                if (data.ChildSummaries) {
                    for (var i = 0; i < data.ChildSummaries.length; i++)
                        this.ChildSummaries.push(new Dismoyo_Ciptoning_Client.vSalesOrderSummaryViewModel(
                            data.ChildSummaries[i]));
                }
            }
        },

        clear: function () {
            this.DocumentID(undefined);
            this.DocumentCode(undefined);
            this.TransactionDate(undefined);
            this.PODocumentID(undefined);
            this.PODocumentCode(undefined);
            this.POTransactionDate(undefined);
            this.SalesmanID(undefined);
            this.SalesmanCode(undefined);
            this.SalesmanName(undefined);
            this.Salesman(undefined);
            this.WarehouseID(undefined);
            this.WarehouseCode(undefined);
            this.WarehouseName(undefined);
            this.Warehouse(undefined);
            this.SiteID(undefined);
            this.SiteCode(undefined);
            this.SiteName(undefined);
            this.Site(undefined);
            this.CompanyID(undefined);
            this.CompanyCode(undefined);
            this.CompanyName(undefined);
            this.Company(undefined);
            this.AreaID(undefined);
            this.AreaCode(undefined);
            this.AreaName(undefined);
            this.Area(undefined);
            this.RegionID(undefined);
            this.RegionCode(undefined);
            this.RegionName(undefined);
            this.Region(undefined);
            this.TerritoryID(undefined);
            this.TerritoryCode(undefined);
            this.TerritoryName(undefined);
            this.Territory(undefined);
            this.SiteDistributionTypeID(undefined);
            this.SiteDistributionTypeName(undefined);
            this.WarehouseTypeID(undefined);
            this.WarehouseTypeName(undefined);
            this.IsSiteLotNumberEntryRequired(undefined);
            this.CustomerID(undefined);
            this.CustomerCode(undefined);
            this.CustomerName(undefined);
            this.Customer(undefined);
            this.PriceGroupID(undefined);
            this.PriceGroupName(undefined);
            this.DiscountGroupID(undefined);
            this.DiscountGroupCode(undefined);
            this.DiscountGroupName(undefined);
            this.DiscountGroup(undefined);
            this.DiscountGroupDescription(undefined);
            this.TermOfPaymentID(undefined);
            this.TermOfPaymentName(undefined);
            this.ReferenceNumber(undefined);
            this.DODocumentID(undefined);
            this.DODocumentCode(undefined);
            this.DOShipmentDate(undefined);
            this.DOReceivedDate(undefined);
            this.DOPrintedCount(undefined);
            this.DOLastPrintedDate(undefined);
            this.InvoiceDocumentID(undefined);
            this.InvoiceDocumentCode(undefined);
            this.RawTotalGrossPrice(undefined);
            this.RawTotalPrice(undefined);
            this.RawTotalDiscountStrata1Amount(undefined);
            this.RawTotalDiscountStrata2Amount(undefined);
            this.RawTotalDiscountStrata3Amount(undefined);
            this.RawTotalDiscountStrata4Amount(undefined);
            this.RawTotalDiscountStrata5Amount(undefined);
            this.RawTotalAddDiscountStrataAmount(undefined);
            this.RawTotalGross(undefined);
            this.RawTotalTax(undefined);
            this.RawTotal(undefined);
            this.TotalGrossPrice(undefined);
            this.TotalPrice(undefined);
            this.TotalDiscountStrata1Amount(undefined);
            this.TotalDiscountStrata2Amount(undefined);
            this.TotalDiscountStrata3Amount(undefined);
            this.TotalDiscountStrata4Amount(undefined);
            this.TotalDiscountStrata5Amount(undefined);
            this.TotalAddDiscountStrataAmount(undefined);
            this.TotalGross(undefined);
            this.TotalTax(undefined);
            this.Total(undefined);
            this.TotalWeight(undefined);
            this.TotalDimension(undefined);
            this.AddDiscountStrataReason(undefined);
            this.DocumentStatusID(undefined);
            this.DocumentStatusName(undefined);
            this.DocumentStatusReason(undefined);
            this.SFAInvoiceDocumentCode(undefined);
            this.PrintCount(undefined);
            this.PostedDate(undefined);
            this.CreatedDate(undefined);
            this.CreatedByUserID(undefined);
            this.CreatedByUserName(undefined);
            this.ModifiedDate(undefined);
            this.ModifiedByUserID(undefined);
            this.ModifiedByUserName(undefined);

            this.ChildSummaries(undefined);
        }
    });
})();
