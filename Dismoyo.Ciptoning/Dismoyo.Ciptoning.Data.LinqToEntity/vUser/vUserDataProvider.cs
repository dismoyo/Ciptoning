// ===================================================================================
// Author        : System
// Created date  : 29 Feb 2016 12:50:57
// Description   : vUserDataProvider partial class.
//
// Modified date :
// Modified by   :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using Dismoyo.Utilities;
using System;
using System.Collections.Generic;
using System.Linq;
//using WebMatrix.WebData;

namespace Dismoyo.Ciptoning.Data
{

    public partial class vUserDataProvider : DefaultViewDataProvider<vUser>, IvUserDataProvider
    {

        #region Methods

        public vUser GetDataByName(string name)
        {
            var user = GetData().SingleOrDefault(p => p.Name.Equals(name, StringComparison.OrdinalIgnoreCase) &&
                !p.IsDeleted);
            
            return user;
        }


        protected override void OnInsertData(vUser obj)
        {
            var systemParameterDataProvider = DataConfiguration.GetDefaultDataProvider<ISystemParameterDataProvider>();
            var userDataProvider = DataConfiguration.GetDefaultDataProvider<IUserDataProvider>();

            var user = new User();

            user.Name = obj.Name;
            user.IsHeadOffice = obj.IsHeadOffice;
            user.SiteID = (user.IsHeadOffice) ? null : obj.SiteID;
            user.StatusID = obj.StatusID;
            user.Password = CryptographyUtility.GetSaltedHash(
                systemParameterDataProvider.GetData("User.DefaultNewUserPassword").Value);

            userDataProvider.InsertData(user);
        }

        protected override void OnUpdateData(vUser obj)
        {
            var userDataProvider = DataConfiguration.GetDefaultDataProvider<IUserDataProvider>();

            var user = userDataProvider.GetData(obj.ID);

            user.IsHeadOffice = obj.IsHeadOffice;
            user.SiteID = (user.IsHeadOffice) ? null : obj.SiteID;
            user.StatusID = obj.StatusID;

            userDataProvider.UpdateData(user);
        }

        protected override void OnDeleteData(vUser obj)
        {
            var userDataProvider = DataConfiguration.GetDefaultDataProvider<IUserDataProvider>();

            var user = userDataProvider.GetData(obj.ID);
            //var region = GetRegionByUserID(obj.ID);
            //if (region.Count() > 0)
            //{
            //    Exception ex = new Exception("Cannot Delete,This User Is Already used");
            //    throw ex;
            //}

            user.IsDeleted = true;

            userDataProvider.UpdateData(user);
        }

        #endregion

    }

}
