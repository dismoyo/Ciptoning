// ===================================================================================
// Author        : System
// Created date  : 29 Feb 2016 12:50:57
// Description   : vSalesOrderSampleSummaryDataProvider partial class.
//
// Modified date :
// Modified by   :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using System;
using System.Collections.Generic;
using System.Linq;
//using WebMatrix.WebData;

namespace Dismoyo.Ciptoning.Data
{

    public partial class vSalesOrderSampleSummaryDataProvider : DefaultViewDataProvider<vSalesOrderSampleSummary>, IvSalesOrderSampleSummaryDataProvider
    {

        #region Methods

        protected override void OnInsertData(vSalesOrderSampleSummary obj, bool useTransaction)
        {
            var salesOrderSampleSummaryDataProvider = DataConfiguration.GetDefaultDataProvider<ISalesOrderSampleSummaryDataProvider>();

            var salesOrderSampleSummary = new SalesOrderSampleSummary();

            salesOrderSampleSummary.DocumentID = obj.DocumentID;
            salesOrderSampleSummary.ProductID = obj.ProductID;

            salesOrderSampleSummary.QtyOnHand = obj.QtyOnHand;

            salesOrderSampleSummary.QtyConvL = obj.QtyConvL;
            salesOrderSampleSummary.QtyConvM = obj.QtyConvM;
            salesOrderSampleSummary.QtyConvS = obj.QtyConvS;

            salesOrderSampleSummary.Qty = obj.Qty;

            salesOrderSampleSummary.PriceDate = obj.PriceDate;
            salesOrderSampleSummary.UnitGrossPrice = obj.UnitGrossPrice;
            salesOrderSampleSummary.UnitPrice = obj.UnitPrice;
            salesOrderSampleSummary.DiscountStrata1Percentage = obj.DiscountStrata1Percentage;
            salesOrderSampleSummary.DiscountStrata2Percentage = obj.DiscountStrata2Percentage;
            salesOrderSampleSummary.DiscountStrata3Percentage = obj.DiscountStrata3Percentage;
            salesOrderSampleSummary.DiscountStrata4Percentage = obj.DiscountStrata4Percentage;
            salesOrderSampleSummary.DiscountStrata5Percentage = obj.DiscountStrata5Percentage;
            salesOrderSampleSummary.AddDiscountStrataPercentage = obj.AddDiscountStrataPercentage;
            salesOrderSampleSummary.TaxPercentage = obj.TaxPercentage;
            salesOrderSampleSummary.RawSubtotalGrossPrice = obj.RawSubtotalGrossPrice;
            salesOrderSampleSummary.RawSubtotalPrice = obj.RawSubtotalPrice;
            salesOrderSampleSummary.RawSubtotalDiscountStrata1 = obj.RawSubtotalDiscountStrata1;
            salesOrderSampleSummary.RawSubtotalDiscountStrata2 = obj.RawSubtotalDiscountStrata2;
            salesOrderSampleSummary.RawSubtotalDiscountStrata3 = obj.RawSubtotalDiscountStrata3;
            salesOrderSampleSummary.RawSubtotalDiscountStrata4 = obj.RawSubtotalDiscountStrata4;
            salesOrderSampleSummary.RawSubtotalDiscountStrata5 = obj.RawSubtotalDiscountStrata5;
            salesOrderSampleSummary.RawSubtotalGross = obj.RawSubtotalGross;
            salesOrderSampleSummary.RawSubtotalTax = obj.RawSubtotalTax;
            salesOrderSampleSummary.RawSubtotal = obj.RawSubtotal;
            salesOrderSampleSummary.SubtotalGrossPrice = obj.SubtotalGrossPrice;
            salesOrderSampleSummary.SubtotalPrice = obj.SubtotalPrice;
            salesOrderSampleSummary.SubtotalDiscountStrata1 = obj.SubtotalDiscountStrata1;
            salesOrderSampleSummary.SubtotalDiscountStrata2 = obj.SubtotalDiscountStrata2;
            salesOrderSampleSummary.SubtotalDiscountStrata3 = obj.SubtotalDiscountStrata3;
            salesOrderSampleSummary.SubtotalDiscountStrata4 = obj.SubtotalDiscountStrata4;
            salesOrderSampleSummary.SubtotalDiscountStrata5 = obj.SubtotalDiscountStrata5;
            salesOrderSampleSummary.SubtotalGross = obj.SubtotalGross;
            salesOrderSampleSummary.SubtotalTax = obj.SubtotalTax;
            salesOrderSampleSummary.Subtotal = obj.Subtotal;
            salesOrderSampleSummary.SubtotalWeight = obj.SubtotalWeight;
            salesOrderSampleSummary.SubtotalDimension = obj.SubtotalDimension;

            salesOrderSampleSummaryDataProvider.InsertData(salesOrderSampleSummary, useTransaction);
            if ((obj.ChildDetails != null) && (obj.ChildDetails.Count > 0))
            {
                // Insert new child data.
                var vSalesOrderSampleDetailsDataProvider =
                    DataConfiguration.GetDefaultDataProvider<IvSalesOrderSampleDetailsDataProvider>();
                foreach (var details in obj.ChildDetails)
                {
                    details.DocumentID = salesOrderSampleSummary.DocumentID;
                    details.ProductID = salesOrderSampleSummary.ProductID;
                    vSalesOrderSampleDetailsDataProvider.InsertData(details, useTransaction);
                }
            }
        }

        protected override void OnUpdateData(vSalesOrderSampleSummary obj, bool useTransaction)
        {
            var salesOrderSampleSummaryDataProvider = DataConfiguration.GetDefaultDataProvider<ISalesOrderSampleSummaryDataProvider>();

            var salesOrderSampleSummary = salesOrderSampleSummaryDataProvider.GetData(obj.DocumentID, obj.ProductID);

            salesOrderSampleSummary.QtyOnHand = obj.QtyOnHand;

            salesOrderSampleSummary.QtyConvL = obj.QtyConvL;
            salesOrderSampleSummary.QtyConvM = obj.QtyConvM;
            salesOrderSampleSummary.QtyConvS = obj.QtyConvS;

            salesOrderSampleSummary.Qty = obj.Qty;

            salesOrderSampleSummary.PriceDate = obj.PriceDate;
            salesOrderSampleSummary.UnitGrossPrice = obj.UnitGrossPrice;
            salesOrderSampleSummary.UnitPrice = obj.UnitPrice;
            salesOrderSampleSummary.DiscountStrata1Percentage = obj.DiscountStrata1Percentage;
            salesOrderSampleSummary.DiscountStrata2Percentage = obj.DiscountStrata2Percentage;
            salesOrderSampleSummary.DiscountStrata3Percentage = obj.DiscountStrata3Percentage;
            salesOrderSampleSummary.DiscountStrata4Percentage = obj.DiscountStrata4Percentage;
            salesOrderSampleSummary.DiscountStrata5Percentage = obj.DiscountStrata5Percentage;
            salesOrderSampleSummary.AddDiscountStrataPercentage = obj.AddDiscountStrataPercentage;
            salesOrderSampleSummary.TaxPercentage = obj.TaxPercentage;
            salesOrderSampleSummary.RawSubtotalGrossPrice = obj.RawSubtotalGrossPrice;
            salesOrderSampleSummary.RawSubtotalPrice = obj.RawSubtotalPrice;
            salesOrderSampleSummary.RawSubtotalDiscountStrata1 = obj.RawSubtotalDiscountStrata1;
            salesOrderSampleSummary.RawSubtotalDiscountStrata2 = obj.RawSubtotalDiscountStrata2;
            salesOrderSampleSummary.RawSubtotalDiscountStrata3 = obj.RawSubtotalDiscountStrata3;
            salesOrderSampleSummary.RawSubtotalDiscountStrata4 = obj.RawSubtotalDiscountStrata4;
            salesOrderSampleSummary.RawSubtotalDiscountStrata5 = obj.RawSubtotalDiscountStrata5;
            salesOrderSampleSummary.RawSubtotalGross = obj.RawSubtotalGross;
            salesOrderSampleSummary.RawSubtotalTax = obj.RawSubtotalTax;
            salesOrderSampleSummary.RawSubtotal = obj.RawSubtotal;
            salesOrderSampleSummary.SubtotalGrossPrice = obj.SubtotalGrossPrice;
            salesOrderSampleSummary.SubtotalPrice = obj.SubtotalPrice;
            salesOrderSampleSummary.SubtotalDiscountStrata1 = obj.SubtotalDiscountStrata1;
            salesOrderSampleSummary.SubtotalDiscountStrata2 = obj.SubtotalDiscountStrata2;
            salesOrderSampleSummary.SubtotalDiscountStrata3 = obj.SubtotalDiscountStrata3;
            salesOrderSampleSummary.SubtotalDiscountStrata4 = obj.SubtotalDiscountStrata4;
            salesOrderSampleSummary.SubtotalDiscountStrata5 = obj.SubtotalDiscountStrata5;
            salesOrderSampleSummary.SubtotalGross = obj.SubtotalGross;
            salesOrderSampleSummary.SubtotalTax = obj.SubtotalTax;
            salesOrderSampleSummary.Subtotal = obj.Subtotal;
            salesOrderSampleSummary.SubtotalWeight = obj.SubtotalWeight;
            salesOrderSampleSummary.SubtotalDimension = obj.SubtotalDimension;

            salesOrderSampleSummaryDataProvider.UpdateData(salesOrderSampleSummary, useTransaction);
            if ((obj.ChildDetails != null) && (obj.ChildDetails.Count > 0))
            {
                var salesOrderSampleDetailsDataProvider =
                    DataConfiguration.GetDefaultDataProvider<ISalesOrderSampleDetailsDataProvider>();
                var vSalesOrderSampleDetailsDataProvider =
                    DataConfiguration.GetDefaultDataProvider<IvSalesOrderSampleDetailsDataProvider>();

                var insertChilds = obj.ChildDetails.ToList();
                var deleteChilds = salesOrderSampleDetailsDataProvider.GetDataByDocumentIDAndProductID(
                    salesOrderSampleSummary.DocumentID, salesOrderSampleSummary.ProductID);
                var updateChilds = new List<vSalesOrderSampleDetails>();
                int i = 0;
                while (i < deleteChilds.Count)
                {
                    var data = insertChilds.SingleOrDefault(p => (p.ProductLotID == deleteChilds[i].ProductLotID));
                    if (data != null)
                    {
                        insertChilds.Remove(data);
                        deleteChilds.RemoveAt(i);
                        updateChilds.Add(data);
                        continue;
                    }

                    i++;
                }

                // Removes existing and unused child data.
                foreach (var child in deleteChilds)
                    salesOrderSampleDetailsDataProvider.DeleteData(child, useTransaction);

                // Update existing child data.
                foreach (var child in updateChilds)
                    vSalesOrderSampleDetailsDataProvider.UpdateData(child, useTransaction);

                // Insert new child data.
                foreach (var child in insertChilds)
                {
                    child.DocumentID = salesOrderSampleSummary.DocumentID;
                    child.ProductID = salesOrderSampleSummary.ProductID;
                    vSalesOrderSampleDetailsDataProvider.InsertData(child, useTransaction);
                }
            }
        }

        #endregion

    }

}
