using Dismoyo.Data.LinqToEntity;
using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Linq;

namespace Dismoyo.Ciptoning.Data
{

    public partial class StoreFunctionsDataContext : DataContext
    {

        #region fCustomer

        [DbFunction("StoreFunctionsDataContext", "fCustomer")]
        public IQueryable<vCustomer> fCustomer(
            Guid? p_ID,
            string p_Code,
            string p_Name,
            Guid? p_SalesmanID,
            string p_SalesmanCode,
            string p_SalesmanName,
            Guid? p_WarehouseID,
            string p_WarehouseCode,
            string p_WarehouseName,
            Guid? p_SiteID,
            string p_SiteCode,
            string p_SiteName,
            int? p_CompanyID,
            string p_CompanyCode,
            string p_CompanyName,
            int? p_AreaID,
            string p_AreaCode,
            string p_AreaName,
            int? p_RegionID,
            string p_RegionCode,
            string p_RegionName,
            int? p_TerritoryID,
            string p_TerritoryCode,
            string p_TerritoryName,
            int? p_SiteDistributionTypeID,
            int? p_WarehouseTypeID,
            int? p_SalesmanGroupID,
            int? p_SalesmanCategoryID,
            int? p_SalesmanStatusID,
            int? p_TermOfPaymentID,
            int? p_PriceGroupID,
            int? p_DiscountGroupID,
            string p_DiscountGroupCode,
            string p_DiscountGroupName,
            string p_DiscountGroupDescription,
            int? p_DiscountGroupStatusID,
            bool? p_IsTaxNumberAvailable,
            string p_TaxNumber,
            string p_Address,
            string p_City,
            string p_StateProvince,
            int? p_CountryID,
            string p_CountryName,
            string p_ZipCode,
            string p_Phone1,
            string p_Phone2,
            string p_Phone3,
            string p_Fax,
            string p_Email,
            string p_AdditionalInfo,
            int? p_CategoryID,
            string p_CategoryCode,
            string p_CategoryName,
            int? p_StatusID,
            bool? p_IsDeleted,
            Guid? p_SalesmanIDRoute,
            int? p_WeekIDEqual,
            int? p_DayIDEqual,
            int? p_WeekIDNotEqual,
            int? p_DayIDNotEqual)
        {
            return OrderQuery<vCustomer>(((IObjectContextAdapter)this).ObjectContext
                .CreateQuery<vCustomer>(string.Format(@"
                [{0}].[fCustomer]
                ( 
                    @ID,
                    @Code,
                    @Name,
                    @SalesmanID,
                    @SalesmanCode,
                    @SalesmanName,
                    @WarehouseID,
                    @WarehouseCode,
                    @WarehouseName,
                    @SiteID,
                    @SiteCode,
                    @SiteName,
                    @CompanyID,
                    @CompanyCode,
                    @CompanyName,
                    @AreaID,
                    @AreaCode,
                    @AreaName,
                    @RegionID,
                    @RegionCode,
                    @RegionName,
                    @TerritoryID,
                    @TerritoryCode,
                    @TerritoryName,
                    @SiteDistributionTypeID,
                    @WarehouseTypeID,
                    @SalesmanGroupID,
                    @SalesmanCategoryID,
                    @SalesmanStatusID,
                    @TermOfPaymentID,
                    @PriceGroupID,
                    @DiscountGroupID,
                    @DiscountGroupCode,
                    @DiscountGroupName,
                    @DiscountGroupDescription,
                    @DiscountGroupStatusID,
                    @IsTaxNumberAvailable,
                    @TaxNumber,
                    @Address,
                    @City,
                    @StateProvince,
                    @CountryID,
                    @CountryName,
                    @ZipCode,
                    @Phone1,
                    @Phone2,
                    @Phone3,
                    @Fax,
                    @Email,
                    @AdditionalInfo,
                    @CategoryID,
                    @CategoryCode,
                    @CategoryName,
                    @StatusID,
                    @IsDeleted,
                    @SalesmanIDRoute,
                    @WeekIDEqual,
                    @DayIDEqual,
                    @WeekIDNotEqual,
                    @DayIDNotEqual
                )", GetType().Name),

                DefaultDataContext.CreateParameter("ID", typeof(Guid?), p_ID),
                DefaultDataContext.CreateParameter("Code", typeof(string), p_Code),
                DefaultDataContext.CreateParameter("Name", typeof(string), p_Name),
                DefaultDataContext.CreateParameter("SalesmanID", typeof(Guid?), p_SalesmanID),
                DefaultDataContext.CreateParameter("SalesmanCode", typeof(string), p_SalesmanCode),
                DefaultDataContext.CreateParameter("SalesmanName", typeof(string), p_SalesmanName),
                DefaultDataContext.CreateParameter("WarehouseID", typeof(Guid?), p_WarehouseID),
                DefaultDataContext.CreateParameter("WarehouseCode", typeof(string), p_WarehouseCode),
                DefaultDataContext.CreateParameter("WarehouseName", typeof(string), p_WarehouseName),
                DefaultDataContext.CreateParameter("SiteID", typeof(Guid?), p_SiteID),
                DefaultDataContext.CreateParameter("SiteCode", typeof(string), p_SiteCode),
                DefaultDataContext.CreateParameter("SiteName", typeof(string), p_SiteName),
                DefaultDataContext.CreateParameter("CompanyID", typeof(int?), p_CompanyID),
                DefaultDataContext.CreateParameter("CompanyCode", typeof(string), p_CompanyCode),
                DefaultDataContext.CreateParameter("CompanyName", typeof(string), p_CompanyName),
                DefaultDataContext.CreateParameter("AreaID", typeof(int?), p_AreaID),
                DefaultDataContext.CreateParameter("AreaCode", typeof(string), p_AreaCode),
                DefaultDataContext.CreateParameter("AreaName", typeof(string), p_AreaName),
                DefaultDataContext.CreateParameter("RegionID", typeof(int?), p_RegionID),
                DefaultDataContext.CreateParameter("RegionCode", typeof(string), p_RegionCode),
                DefaultDataContext.CreateParameter("RegionName", typeof(string), p_RegionName),
                DefaultDataContext.CreateParameter("TerritoryID", typeof(int?), p_TerritoryID),
                DefaultDataContext.CreateParameter("TerritoryCode", typeof(string), p_TerritoryCode),
                DefaultDataContext.CreateParameter("TerritoryName", typeof(string), p_TerritoryName),
                DefaultDataContext.CreateParameter("SiteDistributionTypeID", typeof(int?), p_SiteDistributionTypeID),
                DefaultDataContext.CreateParameter("WarehouseTypeID", typeof(int?), p_WarehouseTypeID),
                DefaultDataContext.CreateParameter("SalesmanGroupID", typeof(int?), p_SalesmanGroupID),
                DefaultDataContext.CreateParameter("SalesmanCategoryID", typeof(int?), p_SalesmanCategoryID),
                DefaultDataContext.CreateParameter("SalesmanStatusID", typeof(int?), p_SalesmanStatusID),
                DefaultDataContext.CreateParameter("TermOfPaymentID", typeof(int?), p_TermOfPaymentID),
                DefaultDataContext.CreateParameter("PriceGroupID", typeof(int?), p_PriceGroupID),
                DefaultDataContext.CreateParameter("DiscountGroupID", typeof(int?), p_DiscountGroupID),
                DefaultDataContext.CreateParameter("DiscountGroupCode", typeof(string), p_DiscountGroupCode),
                DefaultDataContext.CreateParameter("DiscountGroupName", typeof(string), p_DiscountGroupName),
                DefaultDataContext.CreateParameter("DiscountGroupDescription", typeof(string), p_DiscountGroupDescription),
                DefaultDataContext.CreateParameter("DiscountGroupStatusID", typeof(int?), p_DiscountGroupStatusID),
                DefaultDataContext.CreateParameter("IsTaxNumberAvailable", typeof(bool?), p_IsTaxNumberAvailable),
                DefaultDataContext.CreateParameter("TaxNumber", typeof(string), p_TaxNumber),
                DefaultDataContext.CreateParameter("Address", typeof(string), p_Address),
                DefaultDataContext.CreateParameter("City", typeof(string), p_City),
                DefaultDataContext.CreateParameter("StateProvince", typeof(string), p_StateProvince),
                DefaultDataContext.CreateParameter("CountryID", typeof(int?), p_CountryID),
                DefaultDataContext.CreateParameter("CountryName", typeof(string), p_CountryName),
                DefaultDataContext.CreateParameter("ZipCode", typeof(string), p_ZipCode),
                DefaultDataContext.CreateParameter("Phone1", typeof(string), p_Phone1),
                DefaultDataContext.CreateParameter("Phone2", typeof(string), p_Phone2),
                DefaultDataContext.CreateParameter("Phone3", typeof(string), p_Phone3),
                DefaultDataContext.CreateParameter("Fax", typeof(string), p_Fax),
                DefaultDataContext.CreateParameter("Email", typeof(string), p_Email),
                DefaultDataContext.CreateParameter("AdditionalInfo", typeof(string), p_AdditionalInfo),
                DefaultDataContext.CreateParameter("CategoryID", typeof(int?), p_CategoryID),
                DefaultDataContext.CreateParameter("CategoryCode", typeof(string), p_CategoryCode),
                DefaultDataContext.CreateParameter("CategoryName", typeof(string), p_CategoryName),
                DefaultDataContext.CreateParameter("StatusID", typeof(int?), p_StatusID),
                DefaultDataContext.CreateParameter("IsDeleted", typeof(bool?), p_IsDeleted),
                DefaultDataContext.CreateParameter("SalesmanIDRoute", typeof(Guid?), p_SalesmanIDRoute),
                DefaultDataContext.CreateParameter("WeekIDEqual", typeof(int?), p_WeekIDEqual),
                DefaultDataContext.CreateParameter("DayIDEqual", typeof(int?), p_DayIDEqual),
                DefaultDataContext.CreateParameter("WeekIDNotEqual", typeof(int?), p_WeekIDNotEqual),
                DefaultDataContext.CreateParameter("DayIDNotEqual", typeof(int?), p_DayIDNotEqual)));
        }

        #endregion

    }

};
