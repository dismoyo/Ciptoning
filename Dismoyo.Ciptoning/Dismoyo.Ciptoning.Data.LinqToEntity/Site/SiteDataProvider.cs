// ===================================================================================
// Author        : System
// Created date  : 29 Feb 2016 12:50:14
// Description   : SiteDataProvider partial class.
//
// Modified date :
// Modified by   :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using Dismoyo.Data;
using Dismoyo.Web.Security;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace Dismoyo.Ciptoning.Data
{

    public partial class SiteDataProvider : DefaultTableDataProvider<Site>, ISiteDataProvider
    {

        #region Methods

        public Site GetDataByCode(string code)
        {
            var site = GetData().SingleOrDefault(p => p.Code.Equals(code, StringComparison.OrdinalIgnoreCase));

            return site;
        }

        public IList<Site> GetDataActiveSites()
        {
            var sites = GetData().Where(p => (p.StatusID == 1) && (p.IsDeleted == false)).ToList();

            return sites;
        }


        protected override void OnBeginInsertData(BeginOperationDataEventArgs<Site> e)
        {
            e.Data.CreatedDate = DefaultDataContext.GetDBServerUtcDateTime();
            if (HttpContext.Current.User.Identity.IsAuthenticated)
                e.Data.CreatedByUserID = ((BasicGenericIdentity<IvUser>)HttpContext.Current.User.Identity).UserData.ID;

            base.OnBeginInsertData(e);
        }

        protected override void OnBeginUpdateData(BeginOperationDataEventArgs<Site> e)
        {
            e.Data.ModifiedDate = DefaultDataContext.GetDBServerUtcDateTime();
            if (HttpContext.Current.User.Identity.IsAuthenticated)
                e.Data.ModifiedByUserID = ((BasicGenericIdentity<IvUser>)HttpContext.Current.User.Identity).UserData.ID;

            base.OnBeginUpdateData(e);
        }

        public override void DeleteData(Site obj, bool useTransaction)
        {
            var siteProductDataProvider =
                DataConfiguration.GetDefaultDataProvider<ISiteProductDataProvider>();

            var deleteChilds = siteProductDataProvider.GetDataBySiteID(obj.ID);
            foreach (var child in deleteChilds)
                siteProductDataProvider.DeleteData(child, useTransaction);

            base.DeleteData(obj);
        }

        #endregion

    }

}
