// ===================================================================================
// Author        : System
// Created date  : 29 Feb 2016 12:50:57
// Description   : vProductDataProvider partial class.
//
// Modified date :
// Modified by   :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using System;
using System.Collections.Generic;
using System.Linq;
//using WebMatrix.WebData;

namespace Dismoyo.Ciptoning.Data
{

    public partial class vProductDataProvider : DefaultViewDataProvider<vProduct>, IvProductDataProvider
    {
        // added by Asep 27/4/16
        protected string errorMsg = "";

        #region Methods
        
        // added by Asep 27/4/16
        protected bool isValid(vProduct obj)
        {
            bool isValid = true;

            if (obj.UOMSID == obj.UOMMID && obj.UOMSID == obj.UOMLID)
            {
                isValid = false;
                errorMsg = "UOM Small, Medium and Large must be different.";
                return isValid;
            }
            else if (obj.UOMSID == obj.UOMMID)
            {
                isValid = false;
                errorMsg = "UOM Small and Medium must be different.";
                return isValid;
            }
            else if (obj.UOMSID == obj.UOMLID)
            {
                isValid = false;
                errorMsg = "UOM Small and Large must be different.";
                return isValid;
            }
            else if (obj.UOMMID == obj.UOMLID)
            {
                isValid = false;
                errorMsg = "UOM Medium and Large must be different.";
                return isValid;
            }

            if (obj.UOMSID == null)
            {
                isValid = false;
                errorMsg = "UOM Small is required.";
                return isValid;
            }

            if (obj.ConversionS == null)
            {
                isValid = false;
                errorMsg = "Conversion Small is required.";
                return isValid;
            }

            if (obj.ConversionS <= 0)
            {
                isValid = false;
                errorMsg = "Conversion Small must be greater than 0.";
                return isValid;
            }


            if (obj.UOMLID == null && obj.UOMMID == null && obj.UOMSID == null)
            {
                isValid = false;
                errorMsg = "UOM Large or Medium or Small is Required.";
                return isValid;
            }

            if (obj.UOMLID != null)
            {
                if (obj.ConversionL == null)
                {
                    isValid = false;
                    errorMsg = "Conversion Large is required.";
                    return isValid;
                }
            }
            if (obj.ConversionL != null && obj.ConversionL != 0)
            {
                if (obj.UOMLID == null)
                {
                    isValid = false;
                    errorMsg = "UOM Large is required.";
                    return isValid;
                }

                if (obj.ConversionL <= 0)
                {
                    isValid = false;
                    errorMsg = "Conversion Large must be greater than 0.";
                    return isValid;
                }
            }

            if (obj.UOMMID != null)
            {
                if (obj.ConversionM == null)
                {
                    isValid = false;
                    errorMsg = "Conversion Medium is required.";
                    return isValid;
                }
            }
            if (obj.ConversionM != null && obj.ConversionM != 0)
            {
                if (obj.UOMMID == null)
                {
                    isValid = false;
                    errorMsg = "UOM Medium is required.";
                    return isValid;
                }

                if (obj.ConversionM <= 0)
                {
                    isValid = false;
                    errorMsg = "Conversion Medium must be greater than 0.";
                    return isValid;
                }
            }
            return isValid;
        }


        protected override void OnInsertData(vProduct obj)
        {
            var productDataProvider = DataConfiguration.GetDefaultDataProvider<IProductDataProvider>();
            var productAdditionalInfoDataProvider = DataConfiguration.GetDefaultDataProvider<IProductAdditionalInfoDataProvider>();

            var product = new Product();
            var productAdditionalInfo = new ProductAdditionalInfo();

            // added by Asep 27/4/16
            if (!isValid(obj))
            {
                throw new Exception(errorMsg);
            }

            product.Code = obj.Code;
            product.Name = obj.Name;
            product.BrandID = obj.BrandID.Value;
            product.ShortName = obj.ShortName;
            product.UOMLID = obj.UOMLID;
            product.UOMMID = obj.UOMMID;
            product.UOMSID = obj.UOMSID;
            product.Weight = obj.Weight;
            product.DimensionL = obj.DimensionL;
            product.DimensionW = obj.DimensionW;
            product.DimensionH = obj.DimensionH;
            product.ConversionL = (obj.UOMLID == null? 0: obj.ConversionL);
            product.ConversionM = (obj.UOMMID == null ? 0 : obj.ConversionM);
            product.ConversionS = (obj.UOMSID == null ? 0 : obj.ConversionS);
            product.StatusID = obj.StatusID;

            productAdditionalInfo.AdditionalInfo1 = obj.AdditionalInfo1;
            productAdditionalInfo.AdditionalInfo2 = obj.AdditionalInfo2;
            productAdditionalInfo.AdditionalInfo3 = obj.AdditionalInfo3;
            productAdditionalInfo.AdditionalInfo4 = obj.AdditionalInfo4;
            productAdditionalInfo.AdditionalInfo5 = obj.AdditionalInfo5;
            productAdditionalInfo.AdditionalInfo6 = obj.AdditionalInfo6;
            productAdditionalInfo.AdditionalInfo7 = obj.AdditionalInfo7;
            productAdditionalInfo.AdditionalInfo8 = obj.AdditionalInfo8;
            productAdditionalInfo.AdditionalInfo9 = obj.AdditionalInfo9;
            productAdditionalInfo.AdditionalInfo10 = obj.AdditionalInfo10;

            productDataProvider.InsertData(product);

            productAdditionalInfo.ProductID = product.ID;
            productAdditionalInfoDataProvider.InsertData(productAdditionalInfo);

            var siteDataProvider = DataConfiguration.GetDefaultDataProvider<ISiteDataProvider>();
            var siteProductDataProvider = DataConfiguration.GetDefaultDataProvider<ISiteProductDataProvider>();

            var activeSites = siteDataProvider.GetDataActiveSites();
            foreach (var s in activeSites)
            {
                var siteProduct = new SiteProduct();

                siteProduct.SiteID = s.ID;
                siteProduct.ProductID = product.ID;

                siteProductDataProvider.InsertData(siteProduct);
            }
        }

        protected override void OnUpdateData(vProduct obj)
        {
            var productDataProvider = DataConfiguration.GetDefaultDataProvider<IProductDataProvider>();
            var productAdditionalInfoDataProvider = DataConfiguration.GetDefaultDataProvider<IProductAdditionalInfoDataProvider>();

            var product = productDataProvider.GetData(obj.ID);
            var productAdditionalInfo = productAdditionalInfoDataProvider.GetData(obj.ID);

            // added by Asep 27/4/16
            if (!isValid(obj))
            {
                throw new Exception(errorMsg);
            }

            product.Code = obj.Code;
            product.Name = obj.Name;
            product.BrandID = obj.BrandID.Value;
            product.ShortName = obj.ShortName;
            product.UOMLID = obj.UOMLID;
            product.UOMMID = obj.UOMMID;
            product.UOMSID = obj.UOMSID;
            product.Weight = obj.Weight;
            product.DimensionL = obj.DimensionL;
            product.DimensionW = obj.DimensionW;
            product.DimensionH = obj.DimensionH;
            product.ConversionL = (obj.UOMLID == null ? 0 : obj.ConversionL);
            product.ConversionM = (obj.UOMMID == null ? 0 : obj.ConversionM);
            product.ConversionS = (obj.UOMSID == null ? 0 : obj.ConversionS);
            product.StatusID = obj.StatusID;

            productAdditionalInfo.AdditionalInfo1 = obj.AdditionalInfo1;
            productAdditionalInfo.AdditionalInfo2 = obj.AdditionalInfo2;
            productAdditionalInfo.AdditionalInfo3 = obj.AdditionalInfo3;
            productAdditionalInfo.AdditionalInfo4 = obj.AdditionalInfo4;
            productAdditionalInfo.AdditionalInfo5 = obj.AdditionalInfo5;
            productAdditionalInfo.AdditionalInfo6 = obj.AdditionalInfo6;
            productAdditionalInfo.AdditionalInfo7 = obj.AdditionalInfo7;
            productAdditionalInfo.AdditionalInfo8 = obj.AdditionalInfo8;
            productAdditionalInfo.AdditionalInfo9 = obj.AdditionalInfo9;
            productAdditionalInfo.AdditionalInfo10 = obj.AdditionalInfo10;

            productDataProvider.UpdateData(product);
            productAdditionalInfoDataProvider.UpdateData(productAdditionalInfo);
        }

        protected override void OnDeleteData(vProduct obj)
        {
            var productDataProvider = DataConfiguration.GetDefaultDataProvider<IProductDataProvider>();

            var product = productDataProvider.GetData(obj.ID);

            product.IsDeleted = true;

            productDataProvider.UpdateData(product);
        }

        #endregion

    }

}
