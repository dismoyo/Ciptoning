// ===================================================================================
// Author        : System
// Created date  : 03 FMar 2016 15:02:57
// Description   : vCompanyDataProvider partial class.
//
// Modified date :
// Modified by   :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using System;
using System.Collections.Generic;
using System.Linq;
//using WebMatrix.WebData;

namespace Dismoyo.Ciptoning.Data
{

    public partial class vCompanyDataProvider : DefaultViewDataProvider<vCompany>, IvCompanyDataProvider
    {

        #region Methods
        
        public IQueryable<Site> GetSiteByCompanyID(int companyid)
        {
            IQueryable<Site> query = (from obj in DataContext.Set<Site>()
                                           where obj.CompanyID == companyid
                                           select obj);
            return query;
        }

        protected override void OnInsertData(vCompany obj)
        {
            var companyDataProvider = DataConfiguration.GetDefaultDataProvider<ICompanyDataProvider>();
            var companyAddressDataProvider = DataConfiguration.GetDefaultDataProvider<ICompanyAddressDataProvider>();

            var company = new Company();
            var companyAddress = new CompanyAddress();

            company.Code = obj.Code;
            company.Name = obj.Name;
            
            companyAddress.Address1 = obj.Address1;
            companyAddress.Address2 = obj.Address2;
            companyAddress.Address3 = obj.Address3;
            companyAddress.City = obj.City;
            companyAddress.StateProvince = obj.StateProvince;
            companyAddress.CountryID = obj.CountryID;
            companyAddress.ZipCode = obj.ZipCode;
            companyAddress.Phone1 = obj.Phone1;
            companyAddress.Phone2 = obj.Phone2;
            companyAddress.Fax = obj.Fax;
            companyAddress.Email = obj.Email;

            company.TaxNumber = obj.TaxNumber;
            company.StatusID = obj.StatusID;

            companyDataProvider.InsertData(company);

            companyAddress.CompanyID = company.ID;
            companyAddressDataProvider.InsertData(companyAddress);
        }

        protected override void OnUpdateData(vCompany obj)
        {
            var companyDataProvider = DataConfiguration.GetDefaultDataProvider<ICompanyDataProvider>();
            var companyAddressDataProvider = DataConfiguration.GetDefaultDataProvider<ICompanyAddressDataProvider>();

            var company = companyDataProvider.GetData(obj.ID);
            var companyAddress = companyAddressDataProvider.GetData(obj.ID);

            company.Code = obj.Code;
            company.Name = obj.Name;
            
            companyAddress.Address1 = obj.Address1;
            companyAddress.Address2 = obj.Address2;
            companyAddress.Address3 = obj.Address3;
            companyAddress.City = obj.City;
            companyAddress.StateProvince = obj.StateProvince;
            companyAddress.CountryID = obj.CountryID;
            companyAddress.ZipCode = obj.ZipCode;
            companyAddress.Phone1 = obj.Phone1;
            companyAddress.Phone2 = obj.Phone2;
            companyAddress.Fax = obj.Fax;
            companyAddress.Email = obj.Email;

            company.TaxNumber = obj.TaxNumber;
            company.StatusID = obj.StatusID;

            companyDataProvider.UpdateData(company);
            companyAddressDataProvider.UpdateData(companyAddress);
        }

        protected override void OnDeleteData(vCompany obj)
        {
            var companyDataProvider = DataConfiguration.GetDefaultDataProvider<ICompanyDataProvider>();

            var company = companyDataProvider.GetData(obj.ID);
            var site = GetSiteByCompanyID(obj.ID);
            if (site.Count() > 0)
            {
                Exception ex = new Exception("Cannot Delete,This Company Is Already used");
                throw ex;
            }
            company.IsDeleted = true;

            companyDataProvider.UpdateData(company);
        }

        #endregion

    }

}
