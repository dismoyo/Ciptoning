// ===================================================================================
// Author        : System
// Created date  : 29 Feb 2016 12:50:57
// Description   : vSalesOrderFOCSummaryDataProvider partial class.
//
// Modified date :
// Modified by   :
// Comments      :
//
// NOTE: This file is initially generated by system and can be modified following
//       the requirement.
// ===================================================================================

using System;
using System.Collections.Generic;
using System.Linq;
//using WebMatrix.WebData;

namespace Dismoyo.Ciptoning.Data
{

    public partial class vSalesOrderFOCSummaryDataProvider : DefaultViewDataProvider<vSalesOrderFOCSummary>, IvSalesOrderFOCSummaryDataProvider
    {

        #region Methods

        protected override void OnInsertData(vSalesOrderFOCSummary obj, bool useTransaction)
        {
            var salesOrderFOCSummaryDataProvider = DataConfiguration.GetDefaultDataProvider<ISalesOrderFOCSummaryDataProvider>();

            var salesOrderFOCSummary = new SalesOrderFOCSummary();

            salesOrderFOCSummary.DocumentID = obj.DocumentID;
            salesOrderFOCSummary.ProductID = obj.ProductID;

            salesOrderFOCSummary.QtyOnHand = obj.QtyOnHand;

            salesOrderFOCSummary.QtyConvL = obj.QtyConvL;
            salesOrderFOCSummary.QtyConvM = obj.QtyConvM;
            salesOrderFOCSummary.QtyConvS = obj.QtyConvS;

            salesOrderFOCSummary.Qty = obj.Qty;

            salesOrderFOCSummary.PriceDate = obj.PriceDate;
            salesOrderFOCSummary.UnitGrossPrice = obj.UnitGrossPrice;
            salesOrderFOCSummary.UnitPrice = obj.UnitPrice;
            salesOrderFOCSummary.DiscountStrata1Percentage = obj.DiscountStrata1Percentage;
            salesOrderFOCSummary.DiscountStrata2Percentage = obj.DiscountStrata2Percentage;
            salesOrderFOCSummary.DiscountStrata3Percentage = obj.DiscountStrata3Percentage;
            salesOrderFOCSummary.DiscountStrata4Percentage = obj.DiscountStrata4Percentage;
            salesOrderFOCSummary.DiscountStrata5Percentage = obj.DiscountStrata5Percentage;
            salesOrderFOCSummary.AddDiscountStrataPercentage = obj.AddDiscountStrataPercentage;
            salesOrderFOCSummary.TaxPercentage = obj.TaxPercentage;
            salesOrderFOCSummary.RawSubtotalGrossPrice = obj.RawSubtotalGrossPrice;
            salesOrderFOCSummary.RawSubtotalPrice = obj.RawSubtotalPrice;
            salesOrderFOCSummary.RawSubtotalDiscountStrata1 = obj.RawSubtotalDiscountStrata1;
            salesOrderFOCSummary.RawSubtotalDiscountStrata2 = obj.RawSubtotalDiscountStrata2;
            salesOrderFOCSummary.RawSubtotalDiscountStrata3 = obj.RawSubtotalDiscountStrata3;
            salesOrderFOCSummary.RawSubtotalDiscountStrata4 = obj.RawSubtotalDiscountStrata4;
            salesOrderFOCSummary.RawSubtotalDiscountStrata5 = obj.RawSubtotalDiscountStrata5;
            salesOrderFOCSummary.RawSubtotalGross = obj.RawSubtotalGross;
            salesOrderFOCSummary.RawSubtotalTax = obj.RawSubtotalTax;
            salesOrderFOCSummary.RawSubtotal = obj.RawSubtotal;
            salesOrderFOCSummary.SubtotalGrossPrice = obj.SubtotalGrossPrice;
            salesOrderFOCSummary.SubtotalPrice = obj.SubtotalPrice;
            salesOrderFOCSummary.SubtotalDiscountStrata1 = obj.SubtotalDiscountStrata1;
            salesOrderFOCSummary.SubtotalDiscountStrata2 = obj.SubtotalDiscountStrata2;
            salesOrderFOCSummary.SubtotalDiscountStrata3 = obj.SubtotalDiscountStrata3;
            salesOrderFOCSummary.SubtotalDiscountStrata4 = obj.SubtotalDiscountStrata4;
            salesOrderFOCSummary.SubtotalDiscountStrata5 = obj.SubtotalDiscountStrata5;
            salesOrderFOCSummary.SubtotalGross = obj.SubtotalGross;
            salesOrderFOCSummary.SubtotalTax = obj.SubtotalTax;
            salesOrderFOCSummary.Subtotal = obj.Subtotal;
            salesOrderFOCSummary.SubtotalWeight = obj.SubtotalWeight;
            salesOrderFOCSummary.SubtotalDimension = obj.SubtotalDimension;

            salesOrderFOCSummaryDataProvider.InsertData(salesOrderFOCSummary, useTransaction);
            if ((obj.ChildDetails != null) && (obj.ChildDetails.Count > 0))
            {
                // Insert new child data.
                var vSalesOrderFOCDetailsDataProvider =
                    DataConfiguration.GetDefaultDataProvider<IvSalesOrderFOCDetailsDataProvider>();
                foreach (var details in obj.ChildDetails)
                {
                    details.DocumentID = salesOrderFOCSummary.DocumentID;
                    details.ProductID = salesOrderFOCSummary.ProductID;
                    vSalesOrderFOCDetailsDataProvider.InsertData(details, useTransaction);
                }
            }
        }

        protected override void OnUpdateData(vSalesOrderFOCSummary obj, bool useTransaction)
        {
            var salesOrderFOCSummaryDataProvider = DataConfiguration.GetDefaultDataProvider<ISalesOrderFOCSummaryDataProvider>();

            var salesOrderFOCSummary = salesOrderFOCSummaryDataProvider.GetData(obj.DocumentID, obj.ProductID);

            salesOrderFOCSummary.QtyOnHand = obj.QtyOnHand;

            salesOrderFOCSummary.QtyConvL = obj.QtyConvL;
            salesOrderFOCSummary.QtyConvM = obj.QtyConvM;
            salesOrderFOCSummary.QtyConvS = obj.QtyConvS;

            salesOrderFOCSummary.Qty = obj.Qty;

            salesOrderFOCSummary.PriceDate = obj.PriceDate;
            salesOrderFOCSummary.UnitGrossPrice = obj.UnitGrossPrice;
            salesOrderFOCSummary.UnitPrice = obj.UnitPrice;
            salesOrderFOCSummary.DiscountStrata1Percentage = obj.DiscountStrata1Percentage;
            salesOrderFOCSummary.DiscountStrata2Percentage = obj.DiscountStrata2Percentage;
            salesOrderFOCSummary.DiscountStrata3Percentage = obj.DiscountStrata3Percentage;
            salesOrderFOCSummary.DiscountStrata4Percentage = obj.DiscountStrata4Percentage;
            salesOrderFOCSummary.DiscountStrata5Percentage = obj.DiscountStrata5Percentage;
            salesOrderFOCSummary.AddDiscountStrataPercentage = obj.AddDiscountStrataPercentage;
            salesOrderFOCSummary.TaxPercentage = obj.TaxPercentage;
            salesOrderFOCSummary.RawSubtotalGrossPrice = obj.RawSubtotalGrossPrice;
            salesOrderFOCSummary.RawSubtotalPrice = obj.RawSubtotalPrice;
            salesOrderFOCSummary.RawSubtotalDiscountStrata1 = obj.RawSubtotalDiscountStrata1;
            salesOrderFOCSummary.RawSubtotalDiscountStrata2 = obj.RawSubtotalDiscountStrata2;
            salesOrderFOCSummary.RawSubtotalDiscountStrata3 = obj.RawSubtotalDiscountStrata3;
            salesOrderFOCSummary.RawSubtotalDiscountStrata4 = obj.RawSubtotalDiscountStrata4;
            salesOrderFOCSummary.RawSubtotalDiscountStrata5 = obj.RawSubtotalDiscountStrata5;
            salesOrderFOCSummary.RawSubtotalGross = obj.RawSubtotalGross;
            salesOrderFOCSummary.RawSubtotalTax = obj.RawSubtotalTax;
            salesOrderFOCSummary.RawSubtotal = obj.RawSubtotal;
            salesOrderFOCSummary.SubtotalGrossPrice = obj.SubtotalGrossPrice;
            salesOrderFOCSummary.SubtotalPrice = obj.SubtotalPrice;
            salesOrderFOCSummary.SubtotalDiscountStrata1 = obj.SubtotalDiscountStrata1;
            salesOrderFOCSummary.SubtotalDiscountStrata2 = obj.SubtotalDiscountStrata2;
            salesOrderFOCSummary.SubtotalDiscountStrata3 = obj.SubtotalDiscountStrata3;
            salesOrderFOCSummary.SubtotalDiscountStrata4 = obj.SubtotalDiscountStrata4;
            salesOrderFOCSummary.SubtotalDiscountStrata5 = obj.SubtotalDiscountStrata5;
            salesOrderFOCSummary.SubtotalGross = obj.SubtotalGross;
            salesOrderFOCSummary.SubtotalTax = obj.SubtotalTax;
            salesOrderFOCSummary.Subtotal = obj.Subtotal;
            salesOrderFOCSummary.SubtotalWeight = obj.SubtotalWeight;
            salesOrderFOCSummary.SubtotalDimension = obj.SubtotalDimension;

            salesOrderFOCSummaryDataProvider.UpdateData(salesOrderFOCSummary, useTransaction);
            if ((obj.ChildDetails != null) && (obj.ChildDetails.Count > 0))
            {
                var salesOrderFOCDetailsDataProvider =
                    DataConfiguration.GetDefaultDataProvider<ISalesOrderFOCDetailsDataProvider>();
                var vSalesOrderFOCDetailsDataProvider =
                    DataConfiguration.GetDefaultDataProvider<IvSalesOrderFOCDetailsDataProvider>();

                var insertChilds = obj.ChildDetails.ToList();
                var deleteChilds = salesOrderFOCDetailsDataProvider.GetDataByDocumentIDAndProductID(
                    salesOrderFOCSummary.DocumentID, salesOrderFOCSummary.ProductID);
                var updateChilds = new List<vSalesOrderFOCDetails>();
                int i = 0;
                while (i < deleteChilds.Count)
                {
                    var data = insertChilds.SingleOrDefault(p => (p.ProductLotID == deleteChilds[i].ProductLotID));
                    if (data != null)
                    {
                        insertChilds.Remove(data);
                        deleteChilds.RemoveAt(i);
                        updateChilds.Add(data);
                        continue;
                    }

                    i++;
                }

                // Removes existing and unused child data.
                foreach (var child in deleteChilds)
                    salesOrderFOCDetailsDataProvider.DeleteData(child, useTransaction);

                // Update existing child data.
                foreach (var child in updateChilds)
                    vSalesOrderFOCDetailsDataProvider.UpdateData(child, useTransaction);

                // Insert new child data.
                foreach (var child in insertChilds)
                {
                    child.DocumentID = salesOrderFOCSummary.DocumentID;
                    child.ProductID = salesOrderFOCSummary.ProductID;
                    vSalesOrderFOCDetailsDataProvider.InsertData(child, useTransaction);
                }
            }
        }

        #endregion

    }

}
