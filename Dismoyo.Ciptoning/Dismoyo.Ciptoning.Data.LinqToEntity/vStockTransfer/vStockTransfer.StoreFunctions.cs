using Dismoyo.Data.LinqToEntity;
using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Linq;

namespace Dismoyo.Ciptoning.Data
{

    public partial class StoreFunctionsDataContext : DataContext
    {

        #region fStockTransfer

        [DbFunction("StoreFunctionsDataContext", "fStockTransfer")]
        public IQueryable<vStockTransfer> fStockTransfer(
            Guid? p_DocumentID,
            string p_DocumentCode,
            DateTime? p_TransactionDateFrom,
            DateTime? p_TransactionDateTo,
            Guid? p_SourceWarehouseID,
            string p_SourceWarehouseCode,
            string p_SourceWarehouseName,
            Guid? p_SourceSiteID,
            string p_SourceSiteCode,
            string p_SourceSiteName,
            int? p_SourceCompanyID,
            string p_SourceCompanyCode,
            string p_SourceCompanyName,
            int? p_SourceAreaID,
            string p_SourceAreaCode,
            string p_SourceAreaName,
            int? p_SourceRegionID,
            string p_SourceRegionCode,
            string p_SourceRegionName,
            int? p_SourceTerritoryID,
            string p_SourceTerritoryCode,
            string p_SourceTerritoryName,
            int? p_SourceSiteDistributionTypeID,
            bool? p_IsSourceSiteLotNumberEntryRequired,
            int? p_SourceWarehouseTypeID,
            string p_SourcePIC,
            Guid? p_DestinationWarehouseID,
            string p_DestinationWarehouseCode,
            string p_DestinationWarehouseName,
            Guid? p_DestinationSiteID,
            string p_DestinationSiteCode,
            string p_DestinationSiteName,
            int? p_DestinationCompanyID,
            string p_DestinationCompanyCode,
            string p_DestinationCompanyName,
            int? p_DestinationAreaID,
            string p_DestinationAreaCode,
            string p_DestinationAreaName,
            int? p_DestinationRegionID,
            string p_DestinationRegionCode,
            string p_DestinationRegionName,
            int? p_DestinationTerritoryID,
            string p_DestinationTerritoryCode,
            string p_DestinationTerritoryName,
            int? p_DestinationSiteDistributionTypeID,
            int? p_DestinationWarehouseTypeID,
            bool? p_IsDestinationSiteLotNumberEntryRequired,
            string p_DestinationPIC,
            string p_ReferenceNumber,
            Guid? p_DODocumentID,
            string p_DODocumentCode,
            DateTime? p_DOShipmentDateFrom,
            DateTime? p_DOShipmentDateTo,
            DateTime? p_DOReceivedDateFrom,
            DateTime? p_DOReceivedDateTo,
            DateTime? p_DOLastPrintedDateFrom,
            DateTime? p_DOLastPrintedDateTo,
            int? p_DocumentStatusID,
            DateTime? p_PostedDateFrom,
            DateTime? p_PostedDateTo)
        {
            return OrderQuery<vStockTransfer>(((IObjectContextAdapter)this).ObjectContext
                .CreateQuery<vStockTransfer>(string.Format(@"
                [{0}].[fStockTransfer]
                ( 
                    @DocumentID,
                    @DocumentCode,
                    @TransactionDateFrom,
                    @TransactionDateTo,
                    @SourceWarehouseID,
                    @SourceWarehouseCode,
                    @SourceWarehouseName,
                    @SourceSiteID,
                    @SourceSiteCode,
                    @SourceSiteName,
                    @SourceCompanyID,
                    @SourceCompanyCode,
                    @SourceCompanyName,
                    @SourceAreaID,
                    @SourceAreaCode,
                    @SourceAreaName,
                    @SourceRegionID,
                    @SourceRegionCode,
                    @SourceRegionName,
                    @SourceTerritoryID,
                    @SourceTerritoryCode,
                    @SourceTerritoryName,
                    @SourceSiteDistributionTypeID,
                    @IsSourceSiteLotNumberEntryRequired,
                    @SourceWarehouseTypeID,
                    @SourcePIC,
                    @DestinationWarehouseID,
                    @DestinationWarehouseCode,
                    @DestinationWarehouseName,
                    @DestinationSiteID,
                    @DestinationSiteCode,
                    @DestinationSiteName,
                    @DestinationCompanyID,
                    @DestinationCompanyCode,
                    @DestinationCompanyName,
                    @DestinationAreaID,
                    @DestinationAreaCode,
                    @DestinationAreaName,
                    @DestinationRegionID,
                    @DestinationRegionCode,
                    @DestinationRegionName,
                    @DestinationTerritoryID,
                    @DestinationTerritoryCode,
                    @DestinationTerritoryName,
                    @DestinationSiteDistributionTypeID,
                    @DestinationWarehouseTypeID,
                    @IsDestinationSiteLotNumberEntryRequired,
                    @DestinationPIC,
                    @ReferenceNumber,
                    @DODocumentID,
                    @DODocumentCode,
                    @DOShipmentDateFrom,
                    @DOShipmentDateTo,
                    @DOReceivedDateFrom,
                    @DOReceivedDateTo,
                    @DOLastPrintedDateFrom,
                    @DOLastPrintedDateTo,
                    @DocumentStatusID,
                    @PostedDateFrom,
                    @PostedDateTo
                )", GetType().Name),

                DefaultDataContext.CreateParameter("DocumentID", typeof(Guid?), p_DocumentID),
                DefaultDataContext.CreateParameter("DocumentCode", typeof(string), p_DocumentCode),
                DefaultDataContext.CreateParameter("TransactionDateFrom", typeof(DateTime?), p_TransactionDateFrom),
                DefaultDataContext.CreateParameter("TransactionDateTo", typeof(DateTime?), p_TransactionDateTo),
                DefaultDataContext.CreateParameter("SourceWarehouseID", typeof(Guid?), p_SourceWarehouseID),
                DefaultDataContext.CreateParameter("SourceWarehouseCode", typeof(string), p_SourceWarehouseCode),
                DefaultDataContext.CreateParameter("SourceWarehouseName", typeof(string), p_SourceWarehouseName),
                DefaultDataContext.CreateParameter("SourceSiteID", typeof(Guid?), p_SourceSiteID),
                DefaultDataContext.CreateParameter("SourceSiteCode", typeof(string), p_SourceSiteCode),
                DefaultDataContext.CreateParameter("SourceSiteName", typeof(string), p_SourceSiteName),
                DefaultDataContext.CreateParameter("SourceCompanyID", typeof(int?), p_SourceCompanyID),
                DefaultDataContext.CreateParameter("SourceCompanyCode", typeof(string), p_SourceCompanyCode),
                DefaultDataContext.CreateParameter("SourceCompanyName", typeof(string), p_SourceCompanyName),
                DefaultDataContext.CreateParameter("SourceAreaID", typeof(int?), p_SourceAreaID),
                DefaultDataContext.CreateParameter("SourceAreaCode", typeof(string), p_SourceAreaCode),
                DefaultDataContext.CreateParameter("SourceAreaName", typeof(string), p_SourceAreaName),
                DefaultDataContext.CreateParameter("SourceRegionID", typeof(int?), p_SourceRegionID),
                DefaultDataContext.CreateParameter("SourceRegionCode", typeof(string), p_SourceRegionCode),
                DefaultDataContext.CreateParameter("SourceRegionName", typeof(string), p_SourceRegionName),
                DefaultDataContext.CreateParameter("SourceTerritoryID", typeof(int?), p_SourceTerritoryID),
                DefaultDataContext.CreateParameter("SourceTerritoryCode", typeof(string), p_SourceTerritoryCode),
                DefaultDataContext.CreateParameter("SourceTerritoryName", typeof(string), p_SourceTerritoryName),
                DefaultDataContext.CreateParameter("SourceSiteDistributionTypeID", typeof(int?), p_SourceSiteDistributionTypeID),
                DefaultDataContext.CreateParameter("IsSourceSiteLotNumberEntryRequired", typeof(bool?), p_IsSourceSiteLotNumberEntryRequired),
                DefaultDataContext.CreateParameter("SourceWarehouseTypeID", typeof(int?), p_SourceWarehouseTypeID),
                DefaultDataContext.CreateParameter("SourcePIC", typeof(string), p_SourcePIC),
                DefaultDataContext.CreateParameter("DestinationWarehouseID", typeof(Guid?), p_DestinationWarehouseID),
                DefaultDataContext.CreateParameter("DestinationWarehouseCode", typeof(string), p_DestinationWarehouseCode),
                DefaultDataContext.CreateParameter("DestinationWarehouseName", typeof(string), p_DestinationWarehouseName),
                DefaultDataContext.CreateParameter("DestinationSiteID", typeof(Guid?), p_DestinationSiteID),
                DefaultDataContext.CreateParameter("DestinationSiteCode", typeof(string), p_DestinationSiteCode),
                DefaultDataContext.CreateParameter("DestinationSiteName", typeof(string), p_DestinationSiteName),
                DefaultDataContext.CreateParameter("DestinationCompanyID", typeof(int?), p_DestinationCompanyID),
                DefaultDataContext.CreateParameter("DestinationCompanyCode", typeof(string), p_DestinationCompanyCode),
                DefaultDataContext.CreateParameter("DestinationCompanyName", typeof(string), p_DestinationCompanyName),
                DefaultDataContext.CreateParameter("DestinationAreaID", typeof(int?), p_DestinationAreaID),
                DefaultDataContext.CreateParameter("DestinationAreaCode", typeof(string), p_DestinationAreaCode),
                DefaultDataContext.CreateParameter("DestinationAreaName", typeof(string), p_DestinationAreaName),
                DefaultDataContext.CreateParameter("DestinationRegionID", typeof(int?), p_DestinationRegionID),
                DefaultDataContext.CreateParameter("DestinationRegionCode", typeof(string), p_DestinationRegionCode),
                DefaultDataContext.CreateParameter("DestinationRegionName", typeof(string), p_DestinationRegionName),
                DefaultDataContext.CreateParameter("DestinationTerritoryID", typeof(int?), p_DestinationTerritoryID),
                DefaultDataContext.CreateParameter("DestinationTerritoryCode", typeof(string), p_DestinationTerritoryCode),
                DefaultDataContext.CreateParameter("DestinationTerritoryName", typeof(string), p_DestinationTerritoryName),
                DefaultDataContext.CreateParameter("DestinationSiteDistributionTypeID", typeof(int?), p_DestinationSiteDistributionTypeID),
                DefaultDataContext.CreateParameter("DestinationWarehouseTypeID", typeof(int?), p_DestinationWarehouseTypeID),
                DefaultDataContext.CreateParameter("IsDestinationSiteLotNumberEntryRequired", typeof(bool?), p_IsDestinationSiteLotNumberEntryRequired),
                DefaultDataContext.CreateParameter("DestinationPIC", typeof(string), p_DestinationPIC),
                DefaultDataContext.CreateParameter("ReferenceNumber", typeof(string), p_ReferenceNumber),
                DefaultDataContext.CreateParameter("DODocumentID", typeof(Guid?), p_DODocumentID),
                DefaultDataContext.CreateParameter("DODocumentCode", typeof(string), p_DODocumentCode),
                DefaultDataContext.CreateParameter("DOShipmentDateFrom", typeof(DateTime?), p_DOShipmentDateFrom),
                DefaultDataContext.CreateParameter("DOShipmentDateTo", typeof(DateTime?), p_DOShipmentDateTo),
                DefaultDataContext.CreateParameter("DOReceivedDateFrom", typeof(DateTime?), p_DOReceivedDateFrom),
                DefaultDataContext.CreateParameter("DOReceivedDateTo", typeof(DateTime?), p_DOReceivedDateTo),
                DefaultDataContext.CreateParameter("DOLastPrintedDateFrom", typeof(DateTime?), p_DOLastPrintedDateFrom),
                DefaultDataContext.CreateParameter("DOLastPrintedDateTo", typeof(DateTime?), p_DOLastPrintedDateTo),
                DefaultDataContext.CreateParameter("DocumentStatusID", typeof(int?), p_DocumentStatusID),
                DefaultDataContext.CreateParameter("PostedDateFrom", typeof(DateTime?), p_PostedDateFrom),
                DefaultDataContext.CreateParameter("PostedDateTo", typeof(DateTime?), p_PostedDateTo)));
        }

        #endregion

    }

};
