USE [IDOS]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF EXISTS(SELECT * FROM sys.objects
    WHERE object_id = OBJECT_ID(N'[dbo].[fSFADashboard]') AND type IN ( N'FN', N'IF', N'TF', N'FS', N'FT'))
    DROP FUNCTION [dbo].[fSFADashboard];
GO

-- ===================================================================================
-- Author        : System
-- Created date  : 14 Des 2016 11:20:01
-- Description   : -
--
-- NOTE: This Function is initially generated by system and can be modified following
--       the requirement.
-- ===================================================================================

CREATE FUNCTION [dbo].[fSFADashboard]
(
    @SalesmanID uniqueidentifier,
	@TransactionDate Date
)
RETURNS TABLE 
AS
RETURN 
(

	select 
		@SalesmanID SalesmanID
		, @TransactionDate TransactionDate
		, [E].SiteID
		, (DAY(DATEADD(DD,-1,DATEADD(MM,DATEDIFF(MM,-1,@TransactionDate),0)))) - ISNULL([A].HOLIDAYS_COUNT, 0) WorkingDays
		, (DATEPART(DAY, @TransactionDate) - ISNULL([B].SUBSTRACT_TIME_GONE, 0)) - 1 TimeGone
		, ISNULL(SalesOrderAmount, 0) TargetSalesOrderAmount
		, ISNULL(ActualSalesOrderAmount, 0) ActualSalesOrderAmount
		, ISNULL(NewCustomer, 0) TargetNewCustomer
		, ISNULL(ActualNewCustomer, 0) ActualNewCustomer
		from 
		(
			select c.SiteID from [dbo].[Salesman] b
			  join [dbo].[Warehouse] c
			  on b.WarehouseID = c.ID
			  join [dbo].[Site] d
			  on d.ID = c.SiteID
			  where b.ID = @SalesmanID
		) [E]
		left join 
		(
		SELECT [SiteID], count(1) HOLIDAYS_COUNT
		  FROM [dbo].[Holiday]
		  where [SiteID] = (select b.SiteID 
								from [dbo].[Salesman] a
								join [dbo].[Warehouse] b
								on a.WarehouseID = b.ID
								and a.ID = @SalesmanID
							)
		  and MONTH([Date]) = DATEPART(MONTH, @TransactionDate) and YEAR([Date]) = DATEPART(year, @TransactionDate)
		  group by [SiteID]
	) [A]
		on [E].SiteID = [A].SiteID
	left join 
	(
		SELECT [SiteID], count(1) SUBSTRACT_TIME_GONE
		  FROM [dbo].[Holiday]
		  where [SiteID] = (select b.SiteID 
							from [dbo].[Salesman] a
							join [dbo].[Warehouse] b
							on a.WarehouseID = b.ID
							and a.ID = @SalesmanID
						)
		  and MONTH([Date]) = DATEPART(MONTH, @TransactionDate) and YEAR([Date]) = DATEPART(year, @TransactionDate)
		  and [Date] < @TransactionDate
		  group by [SiteID]
	) [B]
	on [E].SiteID = [B].SiteID
	left join 
	(
		SELECT c.SiteID, SalesOrderAmount, NewCustomer
		  FROM [dbo].[SalesmanTarget] a
		  join [dbo].[Salesman] b
		  on a.SalesmanID = b.ID
		  join [dbo].[Warehouse] c
		  on b.WarehouseID = c.ID
		  join [dbo].[Site] d
		  on d.ID = c.SiteID
		  where SalesmanID = @SalesmanID
		  and MONTH(PeriodID) = DATEPART(MONTH, @TransactionDate)
		  and YEAR(PeriodID) = DATEPART(year, @TransactionDate)
	) [C]
	on [E].SiteID = [C].SiteID
	left join 
	(
		SELECT c.SiteID, count(1) ActualNewCustomer
		  FROM [dbo].[Customer] a
		  join [dbo].[Salesman] b
		  on a.SalesmanID = b.ID
			join [dbo].[Warehouse] c
			on b.WarehouseID = c.ID
			join [dbo].[Site] d
			on d.ID = c.SiteID
		  where SalesmanID = @SalesmanID
		  and MONTH(a.RegisteredDate) = DATEPART(MONTH, @TransactionDate)
		  and YEAR(a.RegisteredDate) = DATEPART(year, @TransactionDate)
		  and a.StatusID = 0
		group by c.SiteID
	)[D] on [E].SiteID = [D].SiteID
	left join 
	(
		SELECT c.SiteID, sum(Total) ActualSalesOrderAmount
			FROM [dbo].[SalesOrder] a
			join [dbo].[Warehouse] c
				  on a.WarehouseID = c.ID
				  join [dbo].[Site] d
				  on d.ID = c.SiteID
			join [dbo].[Customer] e
				on a.CustomerID = e.ID
				and e.StatusID <> 0
			where a.SalesmanID = @SalesmanID
			and MONTH(a.CreatedDate) = DATEPART(MONTH, @TransactionDate)
			and YEAR(a.CreatedDate) = DATEPART(year, @TransactionDate)
		group by c.SiteID
	)[F] on [E].SiteID = [F].SiteID
);
GO



IF EXISTS(SELECT * FROM sys.objects
    WHERE object_id = OBJECT_ID(N'[dbo].[vSFADashboard]') AND type IN ( N'V' ))
    DROP VIEW [dbo].[vSFADashboard];
GO

-- ===================================================================================
-- Author        : System
-- Created date  : 17 Mar 2016 20:37:01
-- Description   : Provide view (model) to retrieve [dbo].[fSFADashboard] data.
--
-- NOTE: This View is initially generated by system and can be modified following
--       the requirement.
-- ===================================================================================

CREATE VIEW [dbo].[vSFADashboard]
AS
(
    SELECT
		SalesmanID,
		TransactionDate,
        SiteID,
		WorkingDays,
		TimeGone,
		TargetSalesOrderAmount,
		ActualSalesOrderAmount,
		TargetNewCustomer,
		ActualNewCustomer
        FROM
			[dbo].[fSFADashboard]
            (
                NULL,
                NULL
			)
);
GO
