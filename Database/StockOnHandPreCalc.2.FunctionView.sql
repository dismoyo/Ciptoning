USE [IDOS];
GO

SET ANSI_NULLS ON;
GO

SET QUOTED_IDENTIFIER ON;
GO

IF EXISTS(SELECT * FROM sys.objects
    WHERE object_id = OBJECT_ID(N'[dbo].[fStockOnHandPreCalc]') AND type IN ( N'FN', N'IF', N'TF', N'FS', N'FT'))
    DROP FUNCTION [dbo].[fStockOnHandPreCalc];
GO

-- ===================================================================================
-- Author        : System
-- Created date  : 18 Mar 2016 00:11:40
-- Description   : Provide function to retrieve [dbo].[StockOnHandPreCalc] data.
--
-- NOTE: This Function is initially generated by system and can be modified following
--       the requirement.
-- ===================================================================================

CREATE FUNCTION [dbo].[fStockOnHandPreCalc]
(
    @IsSourceWarehouseID bit,
    @WarehouseID uniqueidentifier,
    @TransactionDate datetime,
    @ProductID int,
    @ProductLotID int,
    @WarehouseCode nvarchar(10),
    @WarehouseName nvarchar(50),
    @SiteID uniqueidentifier,
    @SiteCode nvarchar(10),
    @SiteName nvarchar(50),
    @AreaID int,
    @AreaCode nvarchar(10),
    @AreaName nvarchar(50),
    @RegionID int,
    @RegionCode nvarchar(10),
    @RegionName nvarchar(50),
    @TerritoryID int,
    @TerritoryCode nvarchar(10),
    @TerritoryName nvarchar(50),
    @CompanyID int,
    @CompanyCode nvarchar(10),
    @CompanyName nvarchar(50),
    @SiteDistributionTypeID int,
    @IsSiteLotNumberEntryRequired bit,
    @WarehouseTypeID int,
    @IsWarehouseSOAllowed bit,
    @WarehouseStatusID int,
    @IsWarehouseDeleted bit,
    @ProductCode nvarchar(10),
    @ProductName nvarchar(50),
    @ProductBrandID int,
    @ProductBrandCode nvarchar(10),
    @ProductBrandName nvarchar(50),
    @ProductShortName nvarchar(30),    
    @ProductStatusID int,
    @ProductAdditionalInfo nvarchar(100),
    @ProductLotCode nvarchar(20),
    @ProductLotExpiredDateFrom datetime,
    @ProductLotExpiredDateTo datetime,
    @ProductLotStatusID int,
    @IsProductLotDeleted bit
)
RETURNS TABLE 
AS
RETURN 
(
    SELECT
            [WarehouseID],
            [ProductID],
            [ProductLotID],
            [QtyPeriodOnHandGood],
            [QtyPeriodOnHandHold],
            [QtyPeriodOnHandBad],
            MIN([TransactionDate]) [TransactionDate],
            SUM([QtyGood]) [QtyTransactionGood],
            SUM([QtyHold]) [QtyTransactionHold],
            SUM([QtyBad]) [QtyTransactionBad]
        FROM
            (
                SELECT
                        ISNULL
                        (
                            (SELECT CASE @IsSourceWarehouseID WHEN 1 THEN [vST].[SourceID] ELSE [vST].[DestinationID] END),
                            [vSOHP].[WarehouseID]
                        ) [WarehouseID],
                        ISNULL([vST].[ProductID], [vSOHP].[ProductID]) [ProductID],
                        ISNULL([vST].[ProductLotID], [vSOHP].[ProductLotID]) [ProductLotID],
                        ISNULL([PeriodDateID], [vST].[TransactionDate]) [TransactionDate],
                        [vST].[QtyGood] * (SELECT CASE @IsSourceWarehouseID WHEN 1 THEN 1 ELSE -1 END) [QtyGood],
                        [vST].[QtyHold] * (SELECT CASE @IsSourceWarehouseID WHEN 1 THEN 1 ELSE -1 END) [QtyHold],
                        [vST].[QtyBad] * (SELECT CASE @IsSourceWarehouseID WHEN 1 THEN 1 ELSE -1 END) [QtyBad],
                        ISNULL([vSOHP].[QtyGood], 0) [QtyPeriodOnHandGood],
                        ISNULL([vSOHP].[QtyHold], 0) [QtyPeriodOnHandHold],
                        ISNULL([vSOHP].[QtyBad], 0) [QtyPeriodOnHandBad]
                    FROM
                        (
			                SELECT
                                    [vSOHP].[WarehouseID],
                                    [vSOHP].[PeriodDateID],
                                    [vSOHP].[ProductID],
                                    [vSOHP].[ProductLotID],
                                    [vSOHP].[QtyGood],
                                    [vSOHP].[QtyHold],
                                    [vSOHP].[QtyBad]
                                FROM
                                    [dbo].[StockOnHandPeriodic] [vSOHP] INNER JOIN
                                    (
                                        SELECT
                                                [ssvSOHP].[WarehouseID],
                                                MAX([ssvSOHP].[PeriodDateID]) [PeriodDateID],
                                                [ssvSOHP].[ProductID],
                                                [ssvSOHP].[ProductLotID]                                    
                                            FROM
                                                [dbo].[StockOnHandPeriodic] [ssvSOHP] INNER JOIN
                                                [dbo].[fWarehouse]
                                                (
                                                    @WarehouseID,
                                                    @WarehouseCode,
                                                    @WarehouseName,
                                                    @SiteID,
                                                    @SiteCode,
                                                    @SiteName,
                                                    @AreaID,
                                                    @AreaCode,
                                                    @AreaName,
                                                    @RegionID,
                                                    @RegionCode,
                                                    @RegionName,
                                                    @TerritoryID,
                                                    @TerritoryCode,
                                                    @TerritoryName,
                                                    @CompanyID,
                                                    @CompanyCode,
                                                    @CompanyName,
                                                    @SiteDistributionTypeID,
                                                    @IsSiteLotNumberEntryRequired,
                                                    @WarehouseTypeID,
                                                    @IsWarehouseSOAllowed,
                                                    @WarehouseStatusID,
                                                    @IsWarehouseDeleted
                                                ) [fW] ON ([ssvSOHP].[WarehouseID] = [fW].[ID]) INNER JOIN
                                                [dbo].[fProductLot]
                                                (
                                                    @ProductLotID,
                                                    @ProductLotCode,
                                                    @ProductID,
                                                    @ProductCode,
                                                    @ProductName,
                                                    @ProductBrandID,
                                                    @ProductBrandCode,
                                                    @ProductBrandName,
                                                    @ProductShortName,
                                                    @ProductStatusID,
                                                    @ProductAdditionalInfo,
                                                    @ProductLotExpiredDateFrom,
                                                    @ProductLotExpiredDateTo,
                                                    @ProductLotStatusID,
                                                    @IsProductLotDeleted
                                                ) [fPL] ON ([ssvSOHP].[ProductLotID] = [fPL].[ID])
                                            WHERE            
                                                ((@WarehouseID IS NULL) OR ([ssvSOHP].[WarehouseID] = @WarehouseID)) AND
                                                ([ssvSOHP].[PeriodDateID] <= [dbo].[ConvertToFirstTimeOfDay]([dbo].[ValidateMinDate](@TransactionDate))) AND
                                                ((@ProductID IS NULL) OR ([ssvSOHP].[ProductID] = @ProductID)) AND
                                                ((@ProductLotID IS NULL) OR ([ssvSOHP].[ProductLotID] = @ProductLotID))                                    
                                            GROUP BY
                                                [ssvSOHP].[WarehouseID],
                                                [ssvSOHP].[ProductID],
                                                [ssvSOHP].[ProductLotID]
                                    ) [svSOHP] ON
                                    (
                                        ([vSOHP].[WarehouseID] = [svSOHP].[WarehouseID]) AND
                                        ([vSOHP].[PeriodDateID] = [svSOHP].[PeriodDateID]) AND
                                        ([vSOHP].[ProductID] = [svSOHP].[ProductID]) AND
                                        ([vSOHP].[ProductLotID] = [svSOHP].[ProductLotID])
                                    )
                        ) [vSOHP] FULL OUTER JOIN
                        [dbo].[StockTransaction] [vST] ON
                        (
                            (
                                ((@IsSourceWarehouseID = 1) AND ([vSOHP].[WarehouseID] = [vST].[SourceID])) OR
                                ((@IsSourceWarehouseID = 0) AND ([vSOHP].[WarehouseID] = [vST].[DestinationID]))
                            ) AND
                            ([vSOHP].[ProductID] = [vST].[ProductID]) AND
                            ([vSOHP].[ProductLotID] = [vST].[ProductLotID])
                        )
                    WHERE
                        (
                            (@IsSourceWarehouseID = 1) AND
                            (
                                ((@WarehouseID IS NULL) OR ([vST].[SourceID] = @WarehouseID)) AND
                                (
                                    ([vST].[TransactionTypeID] = 1) OR -- Sales Order
                                    ([vST].[TransactionTypeID] = 3) OR -- Sales Order Swap
                                    ([vST].[TransactionTypeID] = 4) OR -- Sales Order Sample
                                    ([vST].[TransactionTypeID] = 5) OR -- Sales Order FOC
                                    ([vST].[TransactionTypeID] = 6) OR -- Stock Opname
                                    ([vST].[TransactionTypeID] = 7) OR -- Stock Changes
                                    ([vST].[TransactionTypeID] = 8) OR -- Stock Transfer
                                    ([vST].[TransactionTypeID] = 9)    -- Stock Disposal
                                )
                            ) OR                        
                            (@IsSourceWarehouseID = 0) AND
                            (
                                ((@WarehouseID IS NULL) OR ([vST].[DestinationID] = @WarehouseID)) AND
                                ([vST].[DestinationID] IS NOT NULL) AND
                                (
                                    ([vST].[TransactionTypeID] = 2) OR -- Sales Order Return
                                    ([vST].[TransactionTypeID] = 8) OR -- Stock Transfer
                                    ([vST].[TransactionTypeID] = 12)   -- Stock Receive
                                )
                            )
                        ) AND
                        ((@ProductID IS NULL) OR ([vST].[ProductID] = @ProductID)) AND
                        ((@ProductLotID IS NULL) OR ([vST].[ProductLotID] = @ProductLotID)) AND
                        ([dbo].[ValidateMaxDate]([vST].[TransactionDate]) >= [dbo].[ConvertToFirstTimeOfDay]([dbo].[ValidateMinDate]([vSOHP].[PeriodDateID]))) AND
                        ((@TransactionDate IS NULL) OR ([dbo].[ValidateMinDate]([vST].[TransactionDate]) <= [dbo].[ConvertToFirstTimeOfDay]([dbo].[ValidateMaxDate](@TransactionDate))))
                        
            ) [vSTSOHP]
        GROUP BY
            [WarehouseID],
            [ProductID],
            [ProductLotID],
            [QtyPeriodOnHandGood],
            [QtyPeriodOnHandHold],
            [QtyPeriodOnHandBad]
);
GO
