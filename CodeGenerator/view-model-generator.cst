<%@ Template Language="C#" Src="BaseTemplate.cst.cs" Inherits="Generator.BaseTemplate" TargetLanguage="C#" Description="Create a class from database view." %>
<%@ Assembly Name="SchemaExplorer" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="Namespace" Type="System.String" Category="Context" Description="Namespace of the object." %>
<%@ Property Name="SourceView" Type="SchemaExplorer.ViewSchema" Category="Context" Description="View that the object is based on." %>

<%
int i;
%>
// ===================================================================================
// Author        : System
// Created date  : <%= DateAndTime.Now.ToString("dd MMM yyyy HH:mm:ss") %>
// Description   : <% = SourceView.Name %>ViewModel javascript.
//
// NOTE: This file is generated by system. Please do not modify this file.
//       Consider regenerate this file.
// ===================================================================================

(function () {
    <% = Namespace.Replace(".", "_") %>.<% = SourceView.Name %>ViewModel = function (data) {
<%
    foreach (ViewColumnSchema c in SourceView.Columns)
    {
%>
        this.<%= c.Name %> = ko.observable();
<%
    }
%>

        if (data)
            this.fromJS(data);
    };

    $.extend(AIO_IDOS2_Client.<% = SourceView.Name %>ViewModel.prototype, {
        toJS: function () {
            return {
<%
    i = 0;
    foreach (ViewColumnSchema c in SourceView.Columns)
    {
%>
                <%= c.Name %>: this.<%= c.Name %>()<%= (i < SourceView.Columns.Count - 1) ? "," : "" %>
<%
        i++;
    }
%>
            };
        },

        fromJS: function (data) {
            if (data) {
<%
    foreach (ViewColumnSchema c in SourceView.Columns)
    {
%>
                this.<%= c.Name %>(data.<%= c.Name %>);
<%
    }
%>
            }
        },

        clear: function () {
<%
    foreach (ViewColumnSchema c in SourceView.Columns)
    {
%>
                this.<%= c.Name %>(undefined);
<%
    }
%>
        }
    });
})();
